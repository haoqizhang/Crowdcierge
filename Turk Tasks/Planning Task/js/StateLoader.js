// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (function() {
    var _STATE_LOAD_URL;

    _STATE_LOAD_URL = "https://people.csail.mit.edu/jrafidi/Crowdcierge/mobi/loadTurkTourTaskState.php";
    return com.uid.crowdcierge.StateLoader = (function() {
      function StateLoader(options) {
        this._unescapeUrl = __bind(this._unescapeUrl, this);
        this._getUrlParams = __bind(this._getUrlParams, this);
        this._readUrlParameters = __bind(this._readUrlParameters, this);
        this.load = __bind(this.load, this);        this.session = options.session;
        this.currentTaskModel = this.session.currentTaskModel;
      }

      StateLoader.prototype.load = function() {
        var _this = this;

        this._readUrlParameters();
        console.log(this.currentTaskModel);
        if (this.currentTaskModel.get('tid') == null) {
          console.error('NO TASK ID SET.');
          return;
        }
        return $.ajax({
          type: 'GET',
          url: _STATE_LOAD_URL,
          data: {
            type: 'turktour',
            id: this.currentTaskModel.get('tid')
          },
          async: false,
          success: (function(obj) {
            return console.log(obj);
          })
        });
      };

      StateLoader.prototype._readUrlParameters = function() {
        var params;

        params = this._getUrlParams();
        return this.currentTaskModel.set(params);
      };

      StateLoader.prototype._getUrlParams = function() {
        var a, i, m, params, _i, _ref;

        params = {};
        m = window.location.href.match(/[\\?&]([^=]+)=([^&#]*)/g);
        console.log(m);
        if (m != null) {
          for (i = _i = 0, _ref = m.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            a = m[i].match(/.([^=]+)=(.*)/);
            params[this._unescapeUrl(a[1])] = this._unescapeUrl(a[2]);
          }
        }
        return params;
      };

      StateLoader.prototype._unescapeUrl = function(s) {
        return decodeURIComponent(s.replace(/\+/g, "%20"));
      };

      return StateLoader;

    })();
  })();

}).call(this);
